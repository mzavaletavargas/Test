[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://mzavaletavargas.github.io/test/notes/403.html","relUrl":"notes/403.html"},{"doc":"Homepage","title":"Homepage","hpath":"root","content":"# Welcome to Dendron2 \n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n\ngo to this page [[operating-systems.kubernetes.logging]]","url":"https://mzavaletavargas.github.io/test","relUrl":"/"},{"doc":"Programming","title":"Programming","hpath":"programming","content":"","url":"https://mzavaletavargas.github.io/test/notes/9729bb5d-6c46-4422-bc01-0d4f1a9b3ef8.html","relUrl":"notes/9729bb5d-6c46-4422-bc01-0d4f1a9b3ef8.html"},{"doc":"JavaScript","title":"JavaScript","hpath":"programming.javascript","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/ce6e9d6f-33bc-4eb6-aa8d-773740ff1a16.html","relUrl":"notes/ce6e9d6f-33bc-4eb6-aa8d-773740ff1a16.html"},{"doc":"Node.js","title":"Node.js","hpath":"programming.javascript.node-js","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/dec2b4d3-ff94-4735-8797-0a65986de197.html","relUrl":"notes/dec2b4d3-ff94-4735-8797-0a65986de197.html"},{"doc":"Worker Threads","title":"Worker Threads","hpath":"programming.javascript.node-js.worker-threads","content":"\n## Why?\n\nIntesive cpu work, like compression.\n\n## What should I use: Child_process, worker Threads\n\nExplained : https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10\n\nWorker threads: https://nodejs.org/api/worker_threads.html\nChild Process: https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\n\n## Code\n\n```javascript\nconst {\n  Worker,\n  isMainThread,\n  parentPort,\n  workerData,\n} = require(\"worker_threads\");\n\nlet w = new Worker(path, { workerData: null });\nw.on(\"message\", (msg) => console.log(msg));\nw.on(\"error\", (msg) => console.log(msg));\nw.on(\"exit\", (msg) => console.log(msg));\n```\n\nChild on `path`\n\n```javascript\nconst { parentPort } = require(\"worker_threads\");\n\n// do something\n\nparentPort.postMessage(\"notify parent\");\n```\n\n## Thread pool\n\nIs nice to have a thread poll, this library manage it for you\nhttps://github.com/watson/worker-threads-pool\n\nGeneral\nhttps://gobyexample.com/worker-pools\n\n## Concurrent work\n\nhttps://medium.com/@piotrkarpaa/async-await-and-parallel-code-in-node-js-6de6501eea48\\\nhttps://medium.com/platformer-blog/node-js-concurrency-with-async-await-and-promises-b4c4ae8f4510\n\n## child Process\n\nhttps://medium.com/the-guild/getting-to-know-nodes-child-process-module-8ed63038f3fa\n\nhttps://medium.freecodecamp.org/node-js-child-processes-everything-you-need-to-know-e69498fe970a\n\n## Aditional Information\n\nhttps://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\nhttps://medium.com/lazy-engineering/node-worker-threads-b57a32d84845\nhttps://nodejs.org/en/docs/guides/dont-block-the-event-loop/\n","url":"https://mzavaletavargas.github.io/test/notes/78e1ced2-067d-4250-baba-4c35e5ae0d50.html","relUrl":"notes/78e1ced2-067d-4250-baba-4c35e5ae0d50.html"},{"doc":"Security","title":"Security","hpath":"programming.javascript.node-js.security","content":"\n## Avoid 80 port\n\nAvoid running our Node.js app on port 80\nIn most cases is not a good idea to start our app on port 80.\n\n### Why?\n\nOn linux environments root access is needed to use the ports <= 1024\n\n### What is the main problem?\n\nWe are exposed, attackers can find the way to run commands for them using root privileges.\n\nPosible Solutions:\n\nA reverse proxy like nginx\n\n![[dendron://networking/networking.nginx#conclusion]]\n\n# Aditional information\n\n- http://www.nikola-breznjak.com/blog/javascript/nodejs/using-nginx-as-a-reverse-proxy-in-front-of-your-node-js-application/\n- https://stackoverflow.com/questions/16770673/using-node-js-only-vs-using-node-js-with-apache-nginx\n- https://www.reddit.com/r/node/comments/2rjsty/why_not_run_on_port_80/\n- https://blog.risingstack.com/node-js-security-tips/\n- https://stackoverflow.com/questions/16573668/best-practices-when-running-node-js-with-port-80-ubuntu-linode\n\n- https://hashnode.com/post/10-things-you-shouldnt-do-while-running-nodejs-in-production-cisab2fyu0s9oth5341faywcw\n","url":"https://mzavaletavargas.github.io/test/notes/c796d05d-8deb-489d-bb95-495b5376558a.html","relUrl":"notes/c796d05d-8deb-489d-bb95-495b5376558a.html"},{"doc":"Profiling","title":"Profiling","hpath":"programming.javascript.node-js.profiling","content":"\n## Motivation\n\nWe are planning to add new features to our application, will be good to have a \"picture\" for our api that can show how is the performance of our application today. A good advantage is to identify if future changes are affecting the current state of our application.\n\n## Some APM's (Application Performance Management)\n\n- new relic\n- nsolid\n- datadog\n- sentry\n- raygun\n- scout\n\n## Some Standard Profilers\n\n- v8-profiler\n\n## Other visualization profiling tools\n\nClinic-js\n\n- Flame\n- bubleprof\n- doctor mem cpu\n\n## New Relic\n\n### Considerations\n\nOnly use versions supported LTS node\n\nNode.js version Comments\n6 - 10\nFully supported\n\n11, 12\nNot yet fully supported. See related GitHub documentation.\n\nThere are some frameworks available like express and restify that are supported.\n\n### Installation\n\nIs really straigh fordward\n<https://docs.newrelic.com/docs/agents/nodejs-agent/installation-configuration/install-nodejs-agent>\n\n### Using Autocannon\n\nnpm i autocannon -g\n\nsample:\n\n```bash\nautocannon -c 5 -d 99999 -t 20 -a 100 -b -i profiling/createbody.json -m POST -H \"Content-Type: application/json\" -H \"accesstoken: token\" http://localhost:3000/test\n```\n\n### Test 1\n\n```bash\n\nStat 2.5% 50% 97.5% 99% Avg Stdev Max\nLatency 14389 ms 17731 ms 33232 ms 33232 ms 19551.2 ms 4577.49 ms 33232.82 ms\n\nStat 1% 2.5% 50% 97.5% Avg Stdev Min\nReq/Sec 0 0 0 1 0.19 0.4 1\nBytes/Sec 0 B 0 B 0 B 319 B 60.6 B 125 B 319 B\n\nReq/Bytes counts sampled once per second.\n\n30 requests in 158.62s, 9.57 kB read\n70 errors (0 timeouts)\n```\n\nand also reduce the parallel work from 5 concurrent connections to 4.\n\nWe had an anormaly using it, and the application shut down informing that we reach a heap size limit.\n\n![first error](./assets/images/2019-07-01-19-41-49.png)\n\nWe check on new relic\n\n![ram](./assets/images/2019-07-01-19-42-46.png)\n\n![cpu](./assets/images/2019-07-01-19-43-07.png)\n\nWe found the problem that was draining memory ram.\n\n<https://git.autodesk.com/LYNX/hfdm-rest-api/blob/master/src/managers/HfdmManager.js#L161>\n\nThe test seems to be working as expected.\n\n![ram](./assets/images/2019-07-01-19-54-13.png)\n![cpu](./assets/images/2019-07-01-19-54-25.png)\n\n## Conclusions\n\nHaving an APM to give us feedback about our aplication, is really helpfull and almost necesary because it can show us wether the cpu, ram or the response time are increasing. Also what feature caused that and make desicions based on this information.\n\n## Profiling with ClinicJS\n\n### Flame\n\n- The function on the bottom is the function on-CPU. The higher up the y-axis, the further nested the function.\n- The width of each function on the graph represents the amount of time it took that function to execute as a percentage of the total time of its parent function.\n- Finding functions that are both high on the y-axis (deeply nested) and wide on the x-axis (time-intensive) is a great way to narrow down performance and optimization issues\n\n```bash\nStat    2.5%    50%     97.5%    99%      Avg        Stdev     Max\nLatency 4323 ms 5711 ms 10033 ms 10033 ms 5978.53 ms 1402.1 ms 10033.16 ms\n\nStat      1%  2.5% 50%   97.5% Avg   Stdev Min\nReq/Sec   0   0    1     1     0.57  0.53  1\nBytes/Sec 0 B 0 B  319 B 319 B 179 B 168 B 319 B\n\nReq/Bytes counts sampled once per second.\n\n36 requests in 214.65s, 11.5 kB read\n4 errors (4 timeouts)\n```\n\n#### Conclusion\n\nWe can visualize CPU consumption and know is there is blocking code to take action about it.\n\n### Doctor\n\n```bash\nautocannon -c 4 -d 99999 -t 20 -a 40 -b -i profiling/createbody.json -m POST -H \"Content-Type: application/json\" -H \"accesstoken: token\" http://localhost:3000/test\n\nStat    2.5%    50%     97.5%   99%     Avg        Stdev     Max\nLatency 4808 ms 5793 ms 7698 ms 8119 ms 5974.95 ms 753.55 ms 8119.16 ms\n\nStat      1%  2.5% 50%   97.5% Avg   Stdev Min\nReq/Sec   0   0    1     2     0.65  0.65  1\nBytes/Sec 0 B 0 B  319 B 638 B 206 B 207 B 319 B\n\nReq/Bytes counts sampled once per second.\n\n40 requests in 62.19s, 12.8 kB read\n```\n\n## bubbleproof\n\n```bash\n\nStat    2.5%    50%     97.5%    99%      Avg         Stdev      Max\nLatency 8586 ms 9699 ms 14819 ms 15510 ms 10453.68 ms 1595.08 ms 15510.06 ms\n\nStat      1%  2.5% 50% 97.5% Avg   Stdev Min\nReq/Sec   0   0    0   1     0.38  0.53  1\nBytes/Sec 0 B 0 B  0 B 319 B 120 B 167 B 319 B\n\nReq/Bytes counts sampled once per second.\n\n40 requests in 106.14s, 12.8 kB read\n\nautocannon -c 4 -d 99999 -t 20 -a 40 -b -i profiling/createbody.json -m POST -H \"Content-Type: application/json\" -H \"accesstoken: token\" http://localhost:3000/test\n```\n","url":"https://mzavaletavargas.github.io/test/notes/257957a2-5699-47d2-b6d5-96d468443db7.html","relUrl":"notes/257957a2-5699-47d2-b6d5-96d468443db7.html"},{"doc":"Process","title":"Process","hpath":"programming.javascript.node-js.process","content":"\n## How to use it\n\nhttps://flaviocopes.com/node-terminate-program/\n","url":"https://mzavaletavargas.github.io/test/notes/394eb99d-c9b7-41db-ad62-e4c3c8509407.html","relUrl":"notes/394eb99d-c9b7-41db-ad62-e4c3c8509407.html"},{"doc":"Nginx Example","title":"Nginx Example","hpath":"programming.javascript.node-js.nginx-example","content":"\n## What is NGINX\n\n[[networking.nginx]]\n\n## Example\n\n![[dendron://networking/networking.nginx#example-with-node]]\n","url":"https://mzavaletavargas.github.io/test/notes/55c570f1-f3bd-41dd-9279-34f8d623c0df.html","relUrl":"notes/55c570f1-f3bd-41dd-9279-34f8d623c0df.html"},{"doc":"Express","title":"Express","hpath":"programming.javascript.node-js.express","content":"\n## Create a static server\n\n```javascript\nexpress.static(root, [options]);\n```\n\n```javascript\napp.use(express.static(\"public\"));\n```\n\n```javascript\nrouter.get(\"/\", function (req, res) {\n  res.sendFile(path.join(__dirname + \"/index.html\"));\n  //__dirname : It will resolve to your project folder.\n});\n```\n\n## Aditional Information\n\n- https://expressjs.com/en/starter/static-files.html\n- https://codeforgeek.com/2019/03/render-html-file-expressjs/\n","url":"https://mzavaletavargas.github.io/test/notes/4df19af7-cb3d-4fbc-a1b1-fafa17b9bffd.html","relUrl":"notes/4df19af7-cb3d-4fbc-a1b1-fafa17b9bffd.html"},{"doc":"Examples","title":"Examples","hpath":"programming.javascript.node-js.examples","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/8240e3b4-8760-43bf-8de3-f3c28c8a4af3.html","relUrl":"notes/8240e3b4-8760-43bf-8de3-f3c28c8a4af3.html"},{"doc":"Server without Frameworks","title":"Server without Frameworks","hpath":"programming.javascript.node-js.examples.server-without-frameworks","content":"\n## Example\n\nhttps://medium.com/@saurabhkumar_4718/a-simple-nodejs-server-without-express-js-6773122d365f\n","url":"https://mzavaletavargas.github.io/test/notes/eab807bc-1675-468a-b37e-5acc15d35ff0.html","relUrl":"notes/eab807bc-1675-468a-b37e-5acc15d35ff0.html"},{"doc":"Error Handling","title":"Error Handling","hpath":"programming.javascript.node-js.error-handling","content":"\n## Custom Errors\n\nhttps://rclayton.silvrback.com/custom-errors-in-node-js\n\n## Aditional Information\n\n- https://stackify.com/node-js-error-handling/\n- https://dev.to/aershov24/nodejs-error-handling-demystified-2nbo\n- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n- https://www.joyent.com/node-js/production/design/errors\n- https://javascript.info/try-catch\n- https://github.com/typeorm/typeorm/issues/2067\n- https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-mode-exceptions.html\n","url":"https://mzavaletavargas.github.io/test/notes/d43e7547-5709-4155-b0b4-89a37b586844.html","relUrl":"notes/d43e7547-5709-4155-b0b4-89a37b586844.html"},{"doc":"Clusters","title":"Clusters","hpath":"programming.javascript.node-js.clusters","content":"\n## PM2\n\n- Process Manager\n- Forever alive\n- Monitorin\n- Load Balancer\n- Centralized Logs\n- Not optimal compared with native approachs\n\n### Installation\n\n```bash\nnpm install -g pm2\n\n```\n\n### Usefull Comands\n\n```bash\npm2 start index.js // Start the app, restart if needed.\n\npm2 ls  // show the current apps available\npm2 stop app // Stop app\npm2 delete app // Remove the app\n\npm2 monit // Show the process list, global logs, and more\npm2 log // centralized logs\npm2 start index.js -i max // Create a cluster with all CPUS\n\n```\n\nMore: https://devhints.io/pm2\n\n## Cluster Module\n\nNode.js allows to create child processes to use multiple CPU cores and handle multiple tasks in parallel.\nIt uses by the default the round-robin distribution to distribute connections across the workers.\n\nExample: [Setting up a Node.js Cluster\n](https://stackabuse.com/setting-up-a-node-js-cluster/)\n\nmaster.js\n\n```javacript\nconst cluster = require('cluster');\nconst os = require('os')\n\nif (cluster.isMaster) {\n console.log(`Master running on pid: ${process.pid}`)\n\n for (let i = 0; i < os.cpus().length; i++) {\n   cluster.fork();\n }\n\n cluster.on('exit', (worker, code, signal) => {\n   if (code != 0 && !worker.exitedAfterDisconnect) {\n     \tconsole.log(`Worker ${worker.id}\ncrashed, starting a new one`);\n     cluster.fork();\n   }\n })\n} else {\n require('./child')\n}\n```\n\nchild.js\n\n```javacript\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n if ( req.url === '/') {\n   // blocking\n   for (let i = 0; i < 100000000; i++) { }\n   setTimeout(() => {\n     res.end('okay');\n   }, 0)\n } else {\n   res.end()\n }\n});\n\nserver.listen(8080, () => {\n console.log(`Child Server running on pid: ${process.pid}`)\n});\n\nsetTimeout(() => {\n process.exit(1) // death by random timeout\n}, Math.random() * 20000);\n```\n\n## Aditional Information\n\n- https://nodejs.org/api/cluster.html\n- https://github.com/mcollina/autocannon\n- https://flaviocopes.com/node-request-data/\n- https://medium.com/tech-tajawal/clustering-in-nodejs-utilizing-multiple-processor-cores-75d78aeb0f4f\n- https://medium.com/the-andela-way/scaling-out-with-node-clusters-1dca4a39a2a\n- https://medium.freecodecamp.org/node-js-child-processes-everything-you-need-to-know-e69498fe970a\n- http://www.acuriousanimal.com/2017/08/12/understanding-the-nodejs-cluster-module.html\n","url":"https://mzavaletavargas.github.io/test/notes/d69aee32-573c-4b59-abcd-d6cfe3ded443.html","relUrl":"notes/d69aee32-573c-4b59-abcd-d6cfe3ded443.html"},{"doc":"Jam Stack","title":"Jam Stack","hpath":"programming.javascript.jam-stack","content":"\n## Gatsby\n\nhttps://www.gatsbyjs.org/starters?v=2\n","url":"https://mzavaletavargas.github.io/test/notes/73d28d3f-0f79-4683-95d1-7173f1c4bea2.html","relUrl":"notes/73d28d3f-0f79-4683-95d1-7173f1c4bea2.html"},{"doc":"Examples","title":"Examples","hpath":"programming.javascript.examples","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/231a4ba4-a7bf-45b6-9092-b5ba810d4039.html","relUrl":"notes/231a4ba4-a7bf-45b6-9092-b5ba810d4039.html"},{"doc":"Search Engine","title":"Search Engine","hpath":"programming.javascript.examples.search-engine","content":"\n## Usefull links\n\n- https://www.algolia.com/products/search/\n- https://lunrjs.com/docs/index.html\n- https://github.com/mrvautin/githubdocs\n","url":"https://mzavaletavargas.github.io/test/notes/f1937430-5723-4027-ad2d-b41b64443950.html","relUrl":"notes/f1937430-5723-4027-ad2d-b41b64443950.html"},{"doc":"Create Geometrix Figures","title":"Create Geometrix Figures","hpath":"programming.javascript.examples.create-geometrix-figures","content":"\n## Usefull Links\n\nhttps://www.arungudelli.com/html5/html5-canvas-polygon/\n","url":"https://mzavaletavargas.github.io/test/notes/5bd6923f-18c2-481c-ac65-68e619c9cf34.html","relUrl":"notes/5bd6923f-18c2-481c-ac65-68e619c9cf34.html"},{"doc":"Concepts","title":"Concepts","hpath":"programming.javascript.concepts","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/551bcf7f-7173-4397-ac7b-7e4906b66490.html","relUrl":"notes/551bcf7f-7173-4397-ac7b-7e4906b66490.html"},{"doc":"Scope","title":"Scope","hpath":"programming.javascript.concepts.scope","content":"\n## Global Scope\n\nContext created and execution time.\n\n## Execution context\n\nDepending where we are calling our function it will have an scope called `execution context` that is pushed onto the `callstack` and will be deleted when there a `return` statement or a closing bracket `}`\n\n## Lexical Scope\n\nIs it said when an `execution context` can access to the variables that are defined in the `calling context`\n\n## Clousure\n\nIs a technique that store all the variables of the `enclosing scope` when a function is created.\n\n```javascript\nfunction incrementer() {\n  var counter = 0;\n\n  return function () {\n    counter++;\n    console.log(\"counter: \" + counter);\n  };\n}\n\nvar func = incrementer();\n\nfunc(); // counter: 1\nfunc(); // counter: 2\n```\n","url":"https://mzavaletavargas.github.io/test/notes/d4cb4ba7-5cf8-4e05-96ae-e0e238da53e7.html","relUrl":"notes/d4cb4ba7-5cf8-4e05-96ae-e0e238da53e7.html"},{"doc":"Collaborative","title":"Collaborative","hpath":"programming.collaborative","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/b9f47610-404c-4b38-9f3b-6b4b83f53e7a.html","relUrl":"notes/b9f47610-404c-4b38-9f3b-6b4b83f53e7a.html"},{"doc":"Git","title":"Git","hpath":"programming.collaborative.git","content":"","url":"https://mzavaletavargas.github.io/test/notes/d5277a54-dcf8-40a1-9c67-a58d3ab9794c.html","relUrl":"notes/d5277a54-dcf8-40a1-9c67-a58d3ab9794c.html"},{"doc":"Squash","title":"Squash","hpath":"programming.collaborative.git.squash","content":"\n```bash\ngit log --pretty=oneline\ngit rebase -i HEAD~2\n```\n","url":"https://mzavaletavargas.github.io/test/notes/5ffa1381-0b01-4656-8ad8-1a226133dec7.html","relUrl":"notes/5ffa1381-0b01-4656-8ad8-1a226133dec7.html"},{"doc":"Multiple Accounts","title":"Multiple Accounts","hpath":"programming.collaborative.git.multiple-accounts","content":"\nAdd multiple github account, same machine to avoid conflicts when pushing or pulling repositories\n\n```bash\nHost me.github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/me_rsa\n\nHost work.github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/work_rsa\n```\n\n## Reference\n\nhttps://stackoverflow.com/questions/3225862/multiple-github-accounts-ssh-config\n","url":"https://mzavaletavargas.github.io/test/notes/533f3444-2b18-41f0-9284-c31d87eedd08.html","relUrl":"notes/533f3444-2b18-41f0-9284-c31d87eedd08.html"},{"doc":"Dev Ops","title":"Dev Ops","hpath":"dev-ops","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/d824c890-9817-49b3-ba11-36bc6c166015.html","relUrl":"notes/d824c890-9817-49b3-ba11-36bc6c166015.html"},{"doc":"Terraform","title":"Terraform","hpath":"dev-ops.terraform","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/a59959ae-60b2-449b-baec-96ccb7a1b515.html","relUrl":"notes/a59959ae-60b2-449b-baec-96ccb7a1b515.html"},{"doc":"Operating Systems","title":"Operating Systems","hpath":"operating-systems","content":"\nSomething","url":"https://mzavaletavargas.github.io/test/notes/28e19609-7af9-4cfe-8ea3-a7341e6709e8.html","relUrl":"notes/28e19609-7af9-4cfe-8ea3-a7341e6709e8.html"},{"doc":"Windows","title":"Windows","hpath":"operating-systems.windows","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/74e7c8bb-61f0-48bd-9b62-e0ce971f98db.html","relUrl":"notes/74e7c8bb-61f0-48bd-9b62-e0ce971f98db.html"},{"doc":"Kill Current Process","title":"Kill Current Process","hpath":"operating-systems.windows.kill-current-process","content":"\n## Kill current process\n\n\n```bash\nnetstat -ano | findstr :pidHere \ntaskkill /PID pidHere /F\n```\n","url":"https://mzavaletavargas.github.io/test/notes/e60b3995-d638-4190-a43f-05bc77c93e13.html","relUrl":"notes/e60b3995-d638-4190-a43f-05bc77c93e13.html"},{"doc":"Bulk Delete","title":"Bulk Delete","hpath":"operating-systems.windows.bulk-delete","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/b4f4e9e4-501a-4fc8-bebf-ea289a66f3a6.html","relUrl":"notes/b4f4e9e4-501a-4fc8-bebf-ea289a66f3a6.html"},{"doc":"Linux","title":"Linux","hpath":"operating-systems.linux","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/4eb5b7e5-c4d0-4fca-9675-a64459191509.html","relUrl":"notes/4eb5b7e5-c4d0-4fca-9675-a64459191509.html"},{"doc":"Compress Uncompress","title":"Compress Uncompress","hpath":"operating-systems.linux.compress-uncompress","content":"\n## Links\n\nhttps://www.howtogeek.com/248780/how-to-compress-and-extract-files-using-the-tar-command-on-linux/\n","url":"https://mzavaletavargas.github.io/test/notes/6b4343d6-feba-4187-b61a-92ebb87c156e.html","relUrl":"notes/6b4343d6-feba-4187-b61a-92ebb87c156e.html"},{"doc":"Kubernetes","title":"Kubernetes","hpath":"operating-systems.kubernetes","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/a104c545-bf72-4e5e-a3b1-ec7db40358bf.html","relUrl":"notes/a104c545-bf72-4e5e-a3b1-ec7db40358bf.html"},{"doc":"Kubernetes Logging","title":"Kubernetes Logging","hpath":"operating-systems.kubernetes.logging","content":"\n# [SPIKE] Kubernetes Logging\n\nSpike about logging from Kubernetes to other services. Check wich tools, tendencies, compatibility.\n\n## Podcast\n\n[Fluent Bit: Lightweight Logging for Cloud Native Applications - Eduardo Silva](https://open.spotify.com/episode/3DvlI6SBdTn7yAd4UoNc4K?si=puy9i7eUTjiFTBIyqFbk_A)\n\n[Logging with Loki](https://open.spotify.com/episode/6pKuVLowNYLshWA4DjXIw9?si=DUmeWZZ9RwizoIFlvHmszw)\n\n[Building Datadog with Alexis Le Quoc](https://open.spotify.com/episode/66pNYv1filMAlVTdRg2qHe?si=EHQvzEJ1QYa0GM6vektMEA)\n\n* [Transcript](https://softwareengineeringdaily.com/wp-content/uploads/2018/04/SED575-Building-Datadog.pdf)\n\n[Monitoring Kubernetes  With LLan Rabinobitch](https://open.spotify.com/episode/7rVsxtJ3GKS1MQWZQeXc07?si=9w5w5HgVRHqvhe9yhRIzlg)\n\n## Blogs\n\n[Application Logging Simplified in Kubernetes ](https://medium.com/hashmapinc/application-logging-simplified-in-kubernetes-part-1-5ba603a1744b)\n\n[Fluent bit with data dog ](https://www.datadoghq.com/blog/fluentbit-integration-announcement/)\n\n[Fluent bit kubernets ](https://echorand.me/posts/fluentbit-kubernetes/)\n\n## Data Collector\n\nIs important for getting information and redirected to a service like datadog, elasticsearch etc.\n\nSome options:\n\n* Fluentd pod: https://hub.docker.com/r/fluent/fluentd/\n* Fluent Bit: https://fluentbit.io/\n* Loki: https://github.com/grafana/loki\n\nI tried Fluent bit and it's working great, collecting information from every pod as deamon set. A DeamonSet let's you get information inside every pod, without affecting performance too much.\n\n### Fluent Bit\n\nTutorial for kubernetes: https://docs.fluentbit.io/manual/installation/kubernetes\n\n```bash\n$ kubectl create namespace logging\n$ kubectl create -f https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-service-account.yaml\n$ kubectl create -f https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-role.yaml\n$ kubectl create -f https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/fluent-bit-role-binding.yaml\n```\n\nimportant to consider `Match` wich is related with the tags that you defined as `Input` \n\n```yaml\n$ config_map.yaml\n\noutput-datadog.conf: |\n[OUTPUT]\n  Name        datadog\n  Match       backend\n  apikey      ${FLUENT_DATADOG_API_KEY}\n  dd_service  backend\n  dd_tags     container:backend, env:staging\n  dd_source         fluent-bit\n  dd_message_key    log_processed\n```\n\nDeamonSet generic \n\n```\n$ kubectl create -f https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/output/elasticsearch/fluent-bit-configmap.yaml\n```\n\n\n\n## Logging \n\nPrometheus vs Datadog: https://www.bluematador.com/blog/how-to-monitor-your-kubernetes-cluster-prometheus-vs-datadog\n\nDatadog\n\n## Roadblocks\n\n* Input and ouputs references didn't match\n\n## Ideas\n\nElasticseach like hammer for a spike\n\nLoki focus on logs and it's like prometheus. compared with elasticsearch that focus on any kind of data that you store.\n\n\n\n## References\n\n* https://www.youtube.com/watch?v=B2IS-XS-cc0 [Fluent Bit explained | Fluent Bit vs Fluentd] [TechWorld with Nana]\n* https://docs.fluentbit.io/manual/pipeline/outputs/datadog\n* https://www.datadoghq.com/blog/fluentbit-integration-announcement/\n* https://docs.datadoghq.com/integrations/fluentbit/\n* https://dev.to/amitsaha/how-to-set-up-log-forwarding-in-a-kubernetes-cluster-using-fluent-bit-3bgk\n* https://github.com/DataDog/trace-examples/blob/98626d924f82666de60d6b2d6a65d87eebebdff1/opentelemetry/k8s-collector.yml#L181\n\n","url":"https://mzavaletavargas.github.io/test/notes/bb0aabc9-d22e-4f1d-905d-96853fd3f8f7.html","relUrl":"notes/bb0aabc9-d22e-4f1d-905d-96853fd3f8f7.html"},{"doc":"Personal Growth","title":"Personal Growth","hpath":"personal-growth","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/3e958243-cf77-44a4-8a90-fef2ec98ad43.html","relUrl":"notes/3e958243-cf77-44a4-8a90-fef2ec98ad43.html"},{"doc":"Task Management","title":"Task Management","hpath":"personal-growth.task-management","content":"\n## Use full Links\n\n1. https://macautomationtips.com/how-i-hack-and-automate-the-task-manager-todoist/\n2. https://www.dumblittleman.com/ultimate-guide-to-becoming-doer/\n3. [Everything you ever wanted to know about using Todoist (and then some).](https://doist.com/blog/ultimate-guide-todoist/)","url":"https://mzavaletavargas.github.io/test/notes/e3983131-31fd-461a-bb13-0f6e215364ca.html","relUrl":"notes/e3983131-31fd-461a-bb13-0f6e215364ca.html"},{"doc":"Databases","title":"Databases","hpath":"databases","content":"\n## Introduction\n\n- NoSql database\n- Unlimited Concurrent Read/Write\n- DAX for improve speed\n\n## Basic relational concepts\n\n- Data is a collection.\n- Database organize of this collection.\n- Rows/Columns.\n- Primary key identify each row.\n- Foreign key reference data from other tables.\n- Scale adding ram cpu, etc.\n\n### Normalization\n\n- Organize data\n\n- Eliminate redundant data\n\n- Advantages\n\n  - | name | courseId1 | courseName1 | courseId2 | courseName2 |\n    | ---- | --------- | ----------- | --------- | ----------- |\n    | foo  | 3         | Math        | 4         | Science     |\n    | bar  | 3         | Math        |           |             |\n    | test | 4         | Science     | 3         | Math        |\n\n  - 1NF: deleting repeating groups, single value attribute\n\n    - | name | courseId | courseName |\n      | ---- | -------- | ---------- |\n      | foo  | 3        | Math       |\n      | foo  | 4        | Science    |\n      | bar  | 3        | Math       |\n      | test | 4        | Science    |\n      | test | 3        | Math       |\n\n  - 2NF: deleting redundant data\n\n    - | studentId | studentName |\n      | --------- | ----------- |\n      | 1         | foo         |\n      | 2         | bar         |\n      | 3         | test        |\n\n    - | courseId | courseName |\n      | -------- | ---------- |\n      | 3        | Math       |\n      | 4        | Science    |\n      | 3        | test       |\n\n    - | relationId | courseId | employeId |\n      | ---------- | -------- | --------- |\n      | 0001       | 3        | 1         |\n      | 0002       | 4        | 1         |\n      | 0003       | 3        | 2         |\n      | 0004       | 3        | 3         |\n      | 0005       | 4        | 3         |\n\n  - 3NF: not transitive dependencies\n\n    -\n\n- Downside:\n\n  - Computing\n  - SQL queries complex\n\n### NoSQL Basic Concepts\n\n- Support unstructured data\n- Big data apps\n- scale horizontally adding more machines, partitions\n- Object Based APIs for interaction\n\n## Types of NoSQL\n\n- Columnar database\n  - Analytics\n  - loaded from disk\n  - redshif\n- Key-value store\n  - Socual networking\n  - Media\n  - fast access\n  - redis, dynamodb\n- Graph Database\n  - trees\n  - Neo4j\n- Document Database\n  - Json or objects\n  - kasandra\n  - mongodb\n  - couchdb\n\n## ACID\n\n- Atomicity: transaction can execute completely or not at all.\n- Consistency: data written should be valid according to all defined rules.\n- Isolation: Although there is high concurrency, each transactions should be treated 1 by 1\n- Durability: once data has been committed should remain even having system failures\n","url":"https://mzavaletavargas.github.io/test/notes/8a285efb-1044-43b2-b86f-904ad3bf48fc.html","relUrl":"notes/8a285efb-1044-43b2-b86f-904ad3bf48fc.html"},{"doc":"Postgres","title":"Postgres","hpath":"databases.postgres","content":"\n## General Overview\n\n1. https://aws.amazon.com/rds/\n\n2. https://www.enterprisedb.com/download-postgresql-binaries\n\n3. https://severalnines.com/database-blog/benchmarking-managed-postgresql-cloud-solutions-part-one-amazon-aurora\n\n4. https://severalnines.com/database-blog/performance-cheat-sheet-postgresql\n\n5. https://severalnines.com/database-blog/architecture-and-tuning-memory-postgresql-databases\n\n6. https://www.datadoghq.com/blog/100x-faster-postgres-performance-by-changing-1-line/\n\n7. https://thoughtbot.com/blog/advanced-postgres-performance-tips\n\n8. https://aws.amazon.com/getting-started/tutorials/create-connect-postgresql-db/\n\n## Performance\n\n1. https://www.postgresql.org/docs/12/pgbench.html\n\n2. https://severalnines.com/blog/benchmarking-postgresql-performance\n\n3. https://aws.amazon.com/rds/aurora/?nc=sn&loc=1\n\n4. https://severalnines.com/database-blog/benchmarking-managed-postgresql-cloud-solutions-part-two-amazon-rds\n\n5. https://www.datadoghq.com/\n","url":"https://mzavaletavargas.github.io/test/notes/83ea6a26-e3cd-4214-b35d-26c04710621e.html","relUrl":"notes/83ea6a26-e3cd-4214-b35d-26c04710621e.html"},{"doc":"Dynamodb","title":"Dynamodb","hpath":"databases.dynamodb","content":"\n## General Overview\n\n- [performance-metrics](https://www.datadoghq.com/blog/top-dynamodb-performance-metrics/)\n- [11-things-before-start](https://blog.yugabyte.com/11-things-you-wish-you-knew-before-starting-with-dynamodb/)\n- [dynamo-is-not-for-everybody](https://read.acloud.guru/why-amazon-dynamodb-isnt-for-everyone-and-how-to-decide-when-it-s-for-you-aefc52ea9476?gi=d300d4ccd949)\n- [back-to-rds](https://blog.codebarrel.io/why-we-switched-from-dynamodb-back-to-rds-before-we-even-released-3c2ee092120c?gi=b30f9bb06d99)\n- [understanding-scaling-behaviour](https://theburningmonk.com/2019/03/understanding-the-scaling-behaviour-of-dynamodb-ondemand-tables/)\n\n## Basics\n\n![image-20191124220520552](./assets/images/image-20191124220520552.png)\n\n![image-20191124222012419](./assets/images/image-20191124222012419.png)\n\n## Tables\n\n- name.other or name_other name convention\n- no foreign keys on different tables\n- tables are independents\n- Strict ACID\n\n## Data Types\n\n- Scalar Types\n  - String\n  - Number\n  - Boolean\n  - Binary\n  - Null\n- Document Types\n  - Lists []\n  - Maps: key-values map automatically to dynamo DB JSON\n\n## Consistency Model\n\n![image-20191124223816308](./assets/images/image-20191124223816308.png)\n\nDynamo read consistency can be\n\n- Strong: most up-to-date\n\n- Eventual: first, 50% cheaper (default)\n\n## Capacity Units\n\nRCUs WCUs\n\n1 partition can handle 1000 WCUs or 3000 RCUs\n\n## Partitions\n\n- up to 10 GB\n\n- depends on provisioned capacity\n\n- ![image-20191124225317460](./assets/images/image-20191124225317460.png)\n\n- Not be deleted if is modified\n\n## Indexes\n\nHashing algorithm\n\n### Secondary Indexes\n\n- Local secondary Index\n\n- Global secondary Index\n\n## Should you use DynamoDB\n\n![deicision Tree](./assets/images/decision-tree.png)\n\n## Best Practices\n\n- Consistent Hashing ?\n\n### Partition cases\n\n![image-20191126143924334](./assets/images/image-20191126143924334.png)\n\nMore database size will need to modify the provision capacity.\n\nIs recommended to move data base on frecuency, so we can have tables that store data wi less R/W capacity yhan others. This can be a cost bases solution.\n\nPresent an example of migration to have the provition capacity and then lower it down.\nWhen doing that since there was created many partitions during the migration process and then when lowering down, we found out that the Read and Write capacity is smaller for each partititons since the provision capacity is divided in the number of partitions.\n\nDynamodb does not allocate everything or reduce in 1 partitions. partitions will remain. Increasing our cost 6 times\n\nThe best practice will be to distribute data using ´partition key to write simultanipously on dynamodb.\n\n### DynamoDb keys\n\nPrimary keys\n\nstay away scan operations\n\nfilters are made after the data was getted\n\nmax local secondary indexes: 5\n\nglobal seco\n\n![image-20191126153939760](./assets/images/image-20191126153939760.png)\n\n### Hot keys or Partitions\n\nHot keys: when certain keys has information that is going to use data from 1 partition often thatn others for example when we get recent data.\n\nWe can move recent data to other table.\n\nor use DAX as cache\n\n### Design patterns\n\n![image-20191126171249941](./assets/images/image-20191126171249941.png)\n\n## Summary\n\nDynamoDB offers a bunch of features that you can use to start an application with minimal set up. Worry less about scaling, sharding, and put your application running in short time. Also you are in AWS Ecosystem that can bring many benefits. For large-scale applications, there is some things to take into consideration.\n\n- An really good estimation of R/W operatations for our database. In other words be able to predict concurrency and storage which impacts in the **provision capacity** that we need to set up at the beginning, we can modify it later but we can get into unexpected incresing in costs and slowing down every partition created since the **provision capacity** will be divided on each one.\n- Be able to predict how to deal with **hot keys and partitions**, In case we have keys refering data that will be used often than others will end up on using a single partition instead of all tje partitions available. Increasing cost, and delay. As a solution you can \"archived\" some data and move it to other table, in that way you will only worry for the latest data. This startegy needs planning and play with a lot of variables.\n- There is an alternative that Amazon provides adding a layer Using DAX, with it you can redirect incomming request in a way that can lower down the consuption of a single partition and distribute incomming R/W operations over all partitions. This alternative will increase the cost for being an aditional service.\n- queries stron cosnistency and eventually reads\n- index\n- tenancy\n- chech wiki adsk\n\n## Usefull Links\n\n- [performance-metrics](https://www.datadoghq.com/blog/top-dynamodb-performance-metrics/)\n- [11-things-before-start](https://blog.yugabyte.com/11-things-you-wish-you-knew-before-starting-with-dynamodb/)\n- [dynamo-is-not-for-everybody](https://read.acloud.guru/why-amazon-dynamodb-isnt-for-everyone-and-how-to-decide-when-it-s-for-you-aefc52ea9476?gi=d300d4ccd949)\n- [back-to-rds](https://blog.codebarrel.io/why-we-switched-from-dynamodb-back-to-rds-before-we-even-released-3c2ee092120c?gi=b30f9bb06d99)\n- [understanding-scaling-behaviour](https://theburningmonk.com/2019/03/understanding-the-scaling-behaviour-of-dynamodb-ondemand-tables/)\n\n- Youtube: [AWS re:Invent 2018: Amazon DynamoDB Deep Dive: Advanced Design Patterns for DynamoDB (DAT401)\n  ](https://www.youtube.com/watch?v=HaEPXoXVf2k)\n\nlet's say that you are forced to increase the PC to handle more R/W operations during black friday and return to the previous value after that event, as a result you will end up with more partitions which is fine when the value was higher but the we can\n","url":"https://mzavaletavargas.github.io/test/notes/3e389eed-da91-4a54-bd83-2645161e58e0.html","relUrl":"notes/3e389eed-da91-4a54-bd83-2645161e58e0.html"},{"doc":"Networking","title":"Networking","hpath":"networking","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/4ad54c56-c118-4c77-b7a7-704b6e57579c.html","relUrl":"notes/4ad54c56-c118-4c77-b7a7-704b6e57579c.html"},{"doc":"Nginx","title":"Nginx","hpath":"networking.nginx","content":"\n## What is it?\n\nNGINX is a web server which can also be used as a reverse proxy, software load balancer, mail proxy and HTTP cache.\n\nNginx uses an asynchronous event-driven approach, rather than threads, to handle requests.[22] Nginx's modular event-driven architecture can provide more predictable performance under high loads.\n\nDefinition by: https://en.wikipedia.org/wiki/Nginx\n\nhttp://nginx.org/en/docs/beginners_guide.html\n\n## Why do we need this web server?\n\n- Higher performance serving static files\n- SSL/TLS termination\n- Be a first layer for security.\n\nhttps://www.nginx.com/resources/glossary/application-server-vs-web-server/\n[When using node.js, do you still need Nginx or Apache?](https://www.quora.com/When-using-node-js-do-you-still-need-Nginx-or-Apache)\n\n### Avoid running our Node.js app on port 80\n\nOn linux environments root access is needed to use the ports <= 1024\n\nWe are exposed, attackers can find the way to run commands for them using root privileges.\n\nUse a web server that has reverse proxy instead, in other words use NGINX.\n\n## Reverse proxy\n\nReverse Proxy get all the incoming request, do a bunch of operations for us, and response back to the client.\n\n[Use NGINX as a Reverse Proxy](https://www.linode.com/docs/web-servers/nginx/use-nginx-reverse-proxy/)\n\n[Jenkins with NGINX - Reverse proxy with https](https://medium.com/@sportans300/nginx-reverse-proxy-with-https-466daa4da4fc)\n\n## Load Balancer\n\nDistributes workload among our servers preventing overloading, continue serving to clients even if one of the nodes shut down, increase server capacity.\n\nComparation load balancer performance, cluster module, iptables, nginx\nhttps://medium.com/@fermads/node-js-process-load-balancing-comparing-cluster-iptables-and-nginx-6746aaf38272\n\nhttps://github.com/fermads/node.js-process-load-balancing\n\n[How to load Balancing NodeJs apps using Nginx?](http://nginx.org/en/docs/beginners_guide.html)\n\n```\nReverse proxy servers and load balancers are components in a client-server computing architecture. Both act as intermediaries in the communication between the clients and servers, performing functions that improve efficiency. They can be implemented as dedicated, purpose-built devices, but increasingly in modern web architectures they are software applications that run on commodity hardware.\n```\n\n## Differences\n\n[What is a Reverse Proxy vs. Load Balancer?](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n\n### Algorithm\n\nBasic Round robin Scheduling\nhttps://en.wikipedia.org/wiki/Round-robin_scheduling\n\n## Example with Node\n\n```json\n...\nhttp {\n  ...\n    upstream http_servers {\n       server 127.0.0.1:8081;\n       server 127.0.0.1:8082;\n       server 127.0.0.1:8083;\n       server 127.0.0.1:8084;\n     }\n     …\n     server {\n       listen: 8080\n       server_name  localhost;\n       …\n       …\nlocation / {\n   \t  proxy_set_header   X-Real-IP $remote_addr;\n  proxy_set_header   Host      $http_host;\n  proxy_pass         http://http_servers;\n}\n       }\n}\n```\n\nmaster.js\n\n```javascript\nconst cp = require(\"child_process\");\nconst os = require(\"os\");\n\nconsole.log(`Master running \n  on pid: ${process.pid}`);\n\nfor (let i = 0; i < os.cpus().length; i++) {\n  cp.fork(`./child`, { env: { id: i + 1 } });\n}\n```\n\nchild.js\n\n```javascript\nconst http = require(\"http\");\nconst port = 808 + process.env.id;\n\nconst server = http.createServer((req, res) => {\n  if (req.url === \"/\") {\n    // blocking\n    for (let i = 0; i < 100000000; i++) {}\n    setTimeout(() => {\n      res.end(\"okay\");\n    }, 0);\n  } else {\n    res.end();\n  }\n});\n\nserver.listen(port, () => {\n  console.log(`Child Server on port: ${port}, pid: ${process.pid}`);\n});\n```\n\n## Conclusion\n\nNGINX: Definitely solve more of the issues regarding to security, cache, ssl, load balancing, reverse proxy and so on. Is a great option to be used combined with PM2 or Cluster Module\n\n## Aditional Information\n\nhttps://github.com/mzavaletavargas/going-live\n","url":"https://mzavaletavargas.github.io/test/notes/5eb04dc2-7759-4fa7-845a-48043ffe2382.html","relUrl":"notes/5eb04dc2-7759-4fa7-845a-48043ffe2382.html"},{"doc":"Computer Science","title":"Computer Science","hpath":"computer-science","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/dc9ce0b8-8551-4aaf-bcc8-309ad1c58b36.html","relUrl":"notes/dc9ce0b8-8551-4aaf-bcc8-309ad1c58b36.html"},{"doc":"Concepts","title":"Concepts","hpath":"computer-science.concepts","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/e3ea12bb-f6e7-4506-a2ba-ac0ec0e91c54.html","relUrl":"notes/e3ea12bb-f6e7-4506-a2ba-ac0ec0e91c54.html"},{"doc":"High Order Function","title":"High Order Function","hpath":"computer-science.concepts.high-order-function","content":"\n## What is it?\n\ndo at least one of the following:\n\n- takes functions as arguments\n- return function as a result\n","url":"https://mzavaletavargas.github.io/test/notes/b3aa528f-cbca-4e00-ac88-6e3bd3e1c271.html","relUrl":"notes/b3aa528f-cbca-4e00-ac88-6e3bd3e1c271.html"},{"doc":"First Class Function","title":"First Class Function","hpath":"computer-science.concepts.first-class-function","content":"\n## General Concept\n\nIf the programming language use functions as a first-class citizens.\n\n- Pass functions as Arguments to other functions\n- Return a function from other one\n- Assign a functions into a variable\n- Store them into data structure\n\n### First class citizen\n\nIs an entity that supports operations like being passed as an argument, returned from a function, modified, and assigned to a variable\n\n## Example\n\n```javascript\nconst operationSum = (a, b) => {\n  return a + b;\n};\nconst calculate = (a, b, operation) => {\n  return () => {\n    const answer = operation(a, b);\n    return answer;\n  };\n};\n\n// Execute\nconst result = calculate(1, 3, operationSum)();\nconsole.log(result);\n```\n","url":"https://mzavaletavargas.github.io/test/notes/28b61d94-259f-4e30-8285-957babc62de2.html","relUrl":"notes/28b61d94-259f-4e30-8285-957babc62de2.html"},{"doc":"Books","title":"Books","hpath":"books","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/47e06771-c344-4012-8428-07fea574a55e.html","relUrl":"notes/47e06771-c344-4012-8428-07fea574a55e.html"},{"doc":"Clean Code","title":"Clean Code","hpath":"books.clean-code","content":"\n## Meaningful Names\n\n- Use Intention - Revealing names\n  Example: getFlaggedCells()\n\n- Avoid Disinformation\n\n- Make meaningful disc tinctions\n\n- Use pronunceable names\n\n- Use Searchable names EX : `MAX_DAYS_PER_WEEK=5`\n- Avoid encodings\n\n- A class name should not be a verb\n\n- A method name or a verb phrase\n\nConclusion : choosing good names for variables , methods , functions or classes can help others to understand easily what is the intention, save time, and be self documented. Consider invest time thinking in a good nome, people will thank you :)\n\n## References\n\nhttps://drive.google.com/open?id=1sWaU96HGZbKzT-WDiUli8YlqZ-fO4RXF\n","url":"https://mzavaletavargas.github.io/test/notes/edda0772-ac78-404b-853a-81349ec06775.html","relUrl":"notes/edda0772-ac78-404b-853a-81349ec06775.html"},{"doc":"Infrastructure","title":"Infrastructure","hpath":"infrastructure","content":"\n","url":"https://mzavaletavargas.github.io/test/notes/9bb7282d-4ab7-4792-b0c5-43f293c296e1.html","relUrl":"notes/9bb7282d-4ab7-4792-b0c5-43f293c296e1.html"},{"doc":"Aws","title":"Aws","hpath":"infrastructure.aws","content":"\n## References\n\n- https://tecadmin.net/install-yarn-amazon-linux/\n\n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html\n","url":"https://mzavaletavargas.github.io/test/notes/1785ee31-4624-447e-93de-f6d699edb153.html","relUrl":"notes/1785ee31-4624-447e-93de-f6d699edb153.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://mzavaletavargas.github.io/test/notes/changelog.html","relUrl":"notes/changelog.html"}]
